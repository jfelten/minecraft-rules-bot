import { IBlock, IEntity, IPoint, IWindow } from './types';
export declare class MineflayerBot {
    private bot;
    constructor(config: any);
    getVersion(): number;
    getInventory(): IWindow;
    blockAt(point: IPoint): IBlock;
    canSeeBlock(block: IBlock): boolean;
    findBlock(options: any): IBlock[];
    canDigBlock(block: IBlock): boolean;
    recipesFor(itemType: string, metadata: any, minResultCount: number, craftingTable: any): any[];
    recipesAll(itemType: number, metadata: any, craftingTable: any): any;
    end(): any;
    quit(reason: any): void;
    chat(message: string): void;
    whisper(username: string, message: string): void;
    chatAddPattern(pattern: any, chatType: number, description: string): void;
    setSettings(options: any): void;
    loadPlugin(plugin: any): void;
    loadPlugins(plugins: any[]): void;
    sleep(bedBlock: IBlock): Promise<any>;
    wake(): Promise<any>;
    setControlState(control: any, state: any): void;
    clearControlStates(): void;
    lookAt(point: IPoint, force?: boolean): Promise<any>;
    look(yaw: number, pitch: number, force?: boolean): Promise<any>;
    updateSign(block: IBlock, text: string): void;
    equip(item: any, destination: any): Promise<any>;
    unequip(destination: any): Promise<any>;
    tossStack(item: any): Promise<any>;
    toss(item: any, metadata: any, count: number): Promise<any>;
    dig(block: IBlock): Promise<any>;
    stopDigging(): void;
    digTime(block: IBlock): void;
    placeBlock(referenceBlock: IBlock, faceVector: any): Promise<any>;
    activateBlock(block: IBlock): Promise<any>;
    activateEntity(entity: IEntity): Promise<any>;
    activateItem(): void;
    deactivateItem(): void;
    useOn(targetEntity: IEntity): void;
    attack(entity: IEntity): void;
    mount(entity: IEntity): void;
    dismount(): void;
    moveVehicle(left: number, forward: number): void;
    setQuickBarSlot(slot: number): void;
    craft(recipe: any, count: number, craftingTable: any): Promise<any>;
    writeBook(slot: number, pages: any, craftingTable: any): Promise<any>;
    openChest(chest: any): void;
    openFurnace(furnaceBlock: IBlock): void;
    openDispenser(dispenserBlock: IBlock): void;
    openEnchantmentTable(enchantmentTableBlock: IBlock): void;
    openVillager(villagerEntity: IEntity): void;
    trade(villagerInstance: any, tradeIndex: number, times?: number): Promise<any>;
    setCommandBlock(pos: any, command: string, track_output: any): void;
    clickWindow(slot: number, mouseButton: any, mode: any): Promise<any>;
    putSelectedItemRange(start: number, end: number, window: any, slot: number): Promise<any>;
    putAway(slot: number): Promise<any>;
    closeWindow(window: IWindow): void;
    transfer(options: any): Promise<any>;
}
